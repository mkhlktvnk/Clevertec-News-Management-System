version: "3.9"

networks:
  backend:

services:
  resource-server:
    build:
      context: ./resource-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - news_database
      - redis
      - config-server
    networks:
      - backend

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - backend

  users_database:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "users_database"
      POSTGRES_USER: "users_db_user"
      POSTGRES_PASSWORD: "users_db_password"
    ports:
      - "5431:5431"
    restart: unless-stopped
    networks:
      - backend

  news_database:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "news_management_system"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_management_system"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 3G
    networks:
      - backend

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - backend
