version: "3.9"

networks:
  backend:

services:
  #resource-server:
  #  build:
  #    context: ./resource-server
  #    dockerfile: Dockerfile
  #  ports:
  #    - "8080:8080"
  #  depends_on:
  #    - news_database
  #    - redis
  #    - config-server
  #  networks:
  #    - backend

  #config-server:
  #  build:
  #    context: ./config-server
  #    dockerfile: Dockerfile
  #  ports:
  #    - "8888:8888"
  #  networks:
  #    - backend

  users_database:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "users"
      POSTGRES_USER: "users"
      POSTGRES_PASSWORD: "users"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_management_system"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - backend

  news_database:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "news"
      POSTGRES_USER: "news"
      POSTGRES_PASSWORD: "news"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_management_system"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - backend

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - backend
